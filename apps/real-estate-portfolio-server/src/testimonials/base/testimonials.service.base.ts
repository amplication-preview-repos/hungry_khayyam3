/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Testimonials as PrismaTestimonials } from "@prisma/client";

export class TestimonialsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TestimonialsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.testimonials.count(args);
  }

  async testimonialsItems(
    args: Prisma.TestimonialsFindManyArgs
  ): Promise<PrismaTestimonials[]> {
    return this.prisma.testimonials.findMany(args);
  }
  async testimonials(
    args: Prisma.TestimonialsFindUniqueArgs
  ): Promise<PrismaTestimonials | null> {
    return this.prisma.testimonials.findUnique(args);
  }
  async createTestimonials(
    args: Prisma.TestimonialsCreateArgs
  ): Promise<PrismaTestimonials> {
    return this.prisma.testimonials.create(args);
  }
  async updateTestimonials(
    args: Prisma.TestimonialsUpdateArgs
  ): Promise<PrismaTestimonials> {
    return this.prisma.testimonials.update(args);
  }
  async deleteTestimonials(
    args: Prisma.TestimonialsDeleteArgs
  ): Promise<PrismaTestimonials> {
    return this.prisma.testimonials.delete(args);
  }
}
